# This file contains default .gitignore rules. To use it, copy it to .gitignore,
# and it will cause files like your settings.php and user-uploaded files to be
# excluded from Git version control. This is a common strategy to avoid
# accidentally including private information in public repositories and patch
# files.
#
# Because .gitignore can be specific to your site, this file has a different
# name; updating Drupal core will not override your custom .gitignore file.

# Ignore core when managing all of a project's dependencies with Composer
# including Drupal core.
web/core
web/modules/contrib
web/themes/contrib
web/libraries

# Ignore dependencies that are managed with Composer.
# Generally you should only ignore the root vendor directory. It's important
# that core/assets/vendor and any other vendor directories within contrib or
# custom module, theme, etc., are not ignored unless you purposely do so.
/vendor/

# Ignore configuration files that may contain sensitive information.
web/sites/*/settings*.php
web/sites/*/services*.yml
web/sites/*/default.services.yml
web/sites/*/default.settings.php

# Ignore paths that contain user-generated content.
web/sites/*/files
web/sites/*/private

# Ignore SimpleTest multi-site environment.
web/sites/simpletest

# If you prefer to store your .gitignore file in the sites/ folder, comment
# or delete the previous settings and uncomment the following ones, instead.

# Ignore configuration files that may contain sensitive information.
# */settings*.php

# Ignore paths that contain user-generated content.
# */files
# */private

# Ignore SimpleTest multi-site environment.
# simpletest

# Docker local development
.docker-sync/
postgres-init/*.sql

sync/
.env
web/themes/custom/umd_libraries
certs/

local-db/
local-solr/
web/example.gitignore
web/.ht.router.php
web/sites/example.settings.local.php
web/.htaccess
web/modules/README.txt
web/profiles/README.txt
web/themes/README.txt
web/INSTALL.txt
web/robots.txt
web/sites/example.sites.php
web/sites/development.services.yml
